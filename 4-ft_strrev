/*
Assignment name  : ft_strrev
Expected files   : ft_strrev.c
Allowed functions: 
--------------------------------------------------------------------------------
Write a function that reverses (in-place) a string.
It must return its parameter.
Your function must be declared as follows:
char    *ft_strrev(char *str);
*/
#include <stdio.h>
char *ft_strrev(char *str) {
    if (str == NULL)
        return NULL;
    int length = 0;
    while (str[length] != '\0') {
        length++;
    }
    int start = 0;
    int end = length - 1;
    while (start < end) {
        char temp = str[start];
        str[start] = str[end];
        str[end] = temp;
        start++;
        end--;
    }
    return str;
}

int main() {
    char str[] = "Hello, World!";
    printf("Original string: %s\n", str);
    ft_strrev(str);
    printf("Reversed string: %s\n", str);
    return 0;
}

Output:
Original string: Hello, World!
Reversed string: !dlroW ,olleH

In this implementation, the `ft_strrev` function takes a string `str` as input and reverses it in-place. It uses two pointers, `start` and `end`, initialized to the beginning and end of the string, respectively. 
The function swaps the characters at `start` and `end`, and then moves `start` one position to the right and `end` one position to the left. This process continues until `start` is no longer less than `end`, effectively reversing the string. 
Finally, the function returns the modified string.
Note: It's important to ensure that the input string `str` is not `NULL` before performing any operations on it.

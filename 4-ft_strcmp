/*
Assignment name  : ft_strcmp
Expected files   : ft_strcmp.c
Allowed functions: 
--------------------------------------------------------------------------------
Reproduce the behavior of the function strcmp (man strcmp).
Your function must be declared as follows:
int    ft_strcmp(char *s1, char *s2);
*/
int ft_strcmp(char *s1, char *s2) {
    int i = 0;
    while (s1[i] && s2[i] && s1[i] == s2[i]) {
        i++;
    }
    return s1[i] - s2[i];
}

In this function, we compare the characters of the two input strings `s1` and `s2` until we encounter a mismatch or reach the end of either string. We use a `while` loop to iterate through the characters, and the loop condition checks if the current characters are equal and not null-terminators.
If a mismatch is found, the function returns the difference between the ASCII values of the mismatching characters. If both strings are identical, the loop exits when both characters are null-terminators, and the function returns 0.
You can use this function to compare strings in a similar way to the standard `strcmp` function:
#include <stdio.h>
void ft_strcmp();
int main() {
    char str1[] = "Hello";
    char str2[] = "World";
    int result = ft_strcmp(str1, str2);
    if (result < 0) {
        printf("str1 is less than str2\n");
    } else if (result > 0) {
        printf("str1 is greater than str2\n");
    } else {
        printf("str1 is equal to str2\n");
    }
    printf("Comparison result: %d\n", result);    
    return 0;
}

Output:
str1 is less than str2
Comparison result: -15
